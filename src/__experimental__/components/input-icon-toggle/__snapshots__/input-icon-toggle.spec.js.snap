// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InputIconToggle when initiated with the content prop renders as expected 1`] = `
<styled.label
  htmlFor="123"
  isHovered={false}
  key="label-icon"
  theme={
    Object {
      "colors": Object {
        "brand": "#00DC00",
        "error": "#C7384F",
        "info": "#0073C2",
        "primary": "#26A826",
        "secondary": "#006300",
        "success": "#00B000",
        "tertiary": "#004400",
        "text": Object {
          "body": "rgba(0,0,0,0.9)",
          "disabled": "rgba(0,0,0,0.55)",
          "placeholder": "rgba(0,0,0,0.3)",
        },
        "warning": "#FFB500",
        "white": "#FFFFFF",
      },
    }
  }
>
  <span>
    mock content
  </span>
</styled.label>
`;

exports[`InputIconToggle when initiated with the isHovered prop set to false renders as expected 1`] = `
.c0 {
  color: rgba(0,0,0,0.9);
  border-left: 1px solid #668592;
  cursor: pointer;
  padding: 6px;
  margin: -2px -6px;
}

<InputIconToggle
  iconType="foo"
  inputId="123"
  isHovered={false}
>
  <styled.label
    htmlFor="123"
    isHovered={false}
    key="label-icon"
    theme={
      Object {
        "colors": Object {
          "brand": "#00DC00",
          "error": "#C7384F",
          "info": "#0073C2",
          "primary": "#26A826",
          "secondary": "#006300",
          "success": "#00B000",
          "tertiary": "#004400",
          "text": Object {
            "body": "rgba(0,0,0,0.9)",
            "disabled": "rgba(0,0,0,0.55)",
            "placeholder": "rgba(0,0,0,0.3)",
          },
          "warning": "#FFB500",
          "white": "#FFFFFF",
        },
      }
    }
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  color: ",
              [Function],
              ";
  border-left: 1px solid #668592;
  cursor: pointer;
  padding: 6px;
  margin: -2px -6px; /*correction for parent element padding*/
",
            ],
          },
          "defaultProps": Object {
            "theme": Object {
              "colors": Object {
                "brand": "#00DC00",
                "error": "#C7384F",
                "info": "#0073C2",
                "primary": "#26A826",
                "secondary": "#006300",
                "success": "#00B000",
                "tertiary": "#004400",
                "text": Object {
                  "body": "rgba(0,0,0,0.9)",
                  "disabled": "rgba(0,0,0,0.55)",
                  "placeholder": "rgba(0,0,0,0.3)",
                },
                "warning": "#FFB500",
                "white": "#FFFFFF",
              },
            },
          },
          "displayName": "styled.label",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "label",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      htmlFor="123"
      isHovered={false}
      theme={
        Object {
          "colors": Object {
            "brand": "#00DC00",
            "error": "#C7384F",
            "info": "#0073C2",
            "primary": "#26A826",
            "secondary": "#006300",
            "success": "#00B000",
            "tertiary": "#004400",
            "text": Object {
              "body": "rgba(0,0,0,0.9)",
              "disabled": "rgba(0,0,0,0.55)",
              "placeholder": "rgba(0,0,0,0.3)",
            },
            "warning": "#FFB500",
            "white": "#FFFFFF",
          },
        }
      }
    >
      <label
        className="c0"
        htmlFor="123"
      >
        <Icon
          bgSize="small"
          type="foo"
        >
          <span
            className="carbon-icon icon-foo"
            data-component="icon"
            data-element="foo"
            key="icon"
          />
        </Icon>
      </label>
    </StyledComponent>
  </styled.label>
</InputIconToggle>
`;

exports[`InputIconToggle when initiated with the isHovered prop set to true renders as expected 1`] = `
.c0 {
  color: #FFFFFF;
  border-left: 1px solid #668592;
  cursor: pointer;
  padding: 6px;
  margin: -2px -6px;
}

<InputIconToggle
  iconType="foo"
  inputId="123"
  isHovered={true}
>
  <styled.label
    htmlFor="123"
    isHovered={true}
    key="label-icon"
    theme={
      Object {
        "colors": Object {
          "brand": "#00DC00",
          "error": "#C7384F",
          "info": "#0073C2",
          "primary": "#26A826",
          "secondary": "#006300",
          "success": "#00B000",
          "tertiary": "#004400",
          "text": Object {
            "body": "rgba(0,0,0,0.9)",
            "disabled": "rgba(0,0,0,0.55)",
            "placeholder": "rgba(0,0,0,0.3)",
          },
          "warning": "#FFB500",
          "white": "#FFFFFF",
        },
      }
    }
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  color: ",
              [Function],
              ";
  border-left: 1px solid #668592;
  cursor: pointer;
  padding: 6px;
  margin: -2px -6px; /*correction for parent element padding*/
",
            ],
          },
          "defaultProps": Object {
            "theme": Object {
              "colors": Object {
                "brand": "#00DC00",
                "error": "#C7384F",
                "info": "#0073C2",
                "primary": "#26A826",
                "secondary": "#006300",
                "success": "#00B000",
                "tertiary": "#004400",
                "text": Object {
                  "body": "rgba(0,0,0,0.9)",
                  "disabled": "rgba(0,0,0,0.55)",
                  "placeholder": "rgba(0,0,0,0.3)",
                },
                "warning": "#FFB500",
                "white": "#FFFFFF",
              },
            },
          },
          "displayName": "styled.label",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "label",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      htmlFor="123"
      isHovered={true}
      theme={
        Object {
          "colors": Object {
            "brand": "#00DC00",
            "error": "#C7384F",
            "info": "#0073C2",
            "primary": "#26A826",
            "secondary": "#006300",
            "success": "#00B000",
            "tertiary": "#004400",
            "text": Object {
              "body": "rgba(0,0,0,0.9)",
              "disabled": "rgba(0,0,0,0.55)",
              "placeholder": "rgba(0,0,0,0.3)",
            },
            "warning": "#FFB500",
            "white": "#FFFFFF",
          },
        }
      }
    >
      <label
        className="c0"
        htmlFor="123"
      >
        <Icon
          bgSize="small"
          type="foo"
        >
          <span
            className="carbon-icon icon-foo"
            data-component="icon"
            data-element="foo"
            key="icon"
          />
        </Icon>
      </label>
    </StyledComponent>
  </styled.label>
</InputIconToggle>
`;
