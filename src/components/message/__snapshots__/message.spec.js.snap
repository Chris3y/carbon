// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Message when in classic mode when border prop is set to false should render the message without a border 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #335c6d;
  border-radius: 0px;
}

<info
  className="c0"
  type="default"
>
  Message
</info>
`;

exports[`Message when in classic mode when border prop is set to false should render the message without a border 2`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #fdf5f5;
  border-radius: 0px;
}

<info
  className="c0"
  type="error"
>
  Message
</info>
`;

exports[`Message when in classic mode when border prop is set to false should render the message without a border 3`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #fffbf2;
  border-radius: 0px;
}

<info
  className="c0"
  type="help"
>
  Message
</info>
`;

exports[`Message when in classic mode when border prop is set to false should render the message without a border 4`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #f3f8fe;
  border-radius: 0px;
}

<info
  className="c0"
  type="info"
>
  Message
</info>
`;

exports[`Message when in classic mode when border prop is set to false should render the message without a border 5`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #fff8f2;
  border-radius: 0px;
}

<info
  className="c0"
  type="maintenance"
>
  Message
</info>
`;

exports[`Message when in classic mode when border prop is set to false should render the message without a border 6`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #f7f5fa;
  border-radius: 0px;
}

<info
  className="c0"
  type="new"
>
  Message
</info>
`;

exports[`Message when in classic mode when border prop is set to false should render the message without a border 7`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #f6fbf6;
  border-radius: 0px;
}

<info
  className="c0"
  type="success"
>
  Message
</info>
`;

exports[`Message when in classic mode when border prop is set to false should render the message without a border 8`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #fff8f2;
  border-radius: 0px;
}

<info
  className="c0"
  type="warning"
>
  Message
</info>
`;

exports[`Message when in classic mode when rendered should match the snapshot 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #335c6d;
  background-color: #335c6d;
  border-radius: 3px;
}

<info
  className="c0"
  type="default"
>
  Message
</info>
`;

exports[`Message when in classic mode when rendered should match the snapshot 2`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #f7d9d9;
  background-color: #fdf5f5;
  border-radius: 3px;
}

<info
  className="c0"
  type="error"
>
  Message
</info>
`;

exports[`Message when in classic mode when rendered should match the snapshot 3`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #fec;
  background-color: #fffbf2;
  border-radius: 3px;
}

<info
  className="c0"
  type="help"
>
  Message
</info>
`;

exports[`Message when in classic mode when rendered should match the snapshot 4`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #d0e3fa;
  background-color: #f3f8fe;
  border-radius: 3px;
}

<info
  className="c0"
  type="info"
>
  Message
</info>
`;

exports[`Message when in classic mode when rendered should match the snapshot 5`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #ffe4cc;
  background-color: #fff8f2;
  border-radius: 3px;
}

<info
  className="c0"
  type="maintenance"
>
  Message
</info>
`;

exports[`Message when in classic mode when rendered should match the snapshot 6`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #e0d6eb;
  background-color: #f7f5fa;
  border-radius: 3px;
}

<info
  className="c0"
  type="new"
>
  Message
</info>
`;

exports[`Message when in classic mode when rendered should match the snapshot 7`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #dcf1da;
  background-color: #f6fbf6;
  border-radius: 3px;
}

<info
  className="c0"
  type="success"
>
  Message
</info>
`;

exports[`Message when in classic mode when rendered should match the snapshot 8`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #ffe4cc;
  background-color: #fff8f2;
  border-radius: 3px;
}

<info
  className="c0"
  type="warning"
>
  Message
</info>
`;

exports[`Message when in classic mode when roundedCorners prop is not passed should apply proper border-radius style 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #335c6d;
  background-color: #335c6d;
  border-radius: 3px;
}

<info
  className="c0"
  type="default"
>
  Message
</info>
`;

exports[`Message when in classic mode when roundedCorners prop is not passed should apply proper border-radius style 2`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #f7d9d9;
  background-color: #fdf5f5;
  border-radius: 3px;
}

<info
  className="c0"
  type="error"
>
  Message
</info>
`;

exports[`Message when in classic mode when roundedCorners prop is not passed should apply proper border-radius style 3`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #fec;
  background-color: #fffbf2;
  border-radius: 3px;
}

<info
  className="c0"
  type="help"
>
  Message
</info>
`;

exports[`Message when in classic mode when roundedCorners prop is not passed should apply proper border-radius style 4`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #d0e3fa;
  background-color: #f3f8fe;
  border-radius: 3px;
}

<info
  className="c0"
  type="info"
>
  Message
</info>
`;

exports[`Message when in classic mode when roundedCorners prop is not passed should apply proper border-radius style 5`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #ffe4cc;
  background-color: #fff8f2;
  border-radius: 3px;
}

<info
  className="c0"
  type="maintenance"
>
  Message
</info>
`;

exports[`Message when in classic mode when roundedCorners prop is not passed should apply proper border-radius style 6`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #e0d6eb;
  background-color: #f7f5fa;
  border-radius: 3px;
}

<info
  className="c0"
  type="new"
>
  Message
</info>
`;

exports[`Message when in classic mode when roundedCorners prop is not passed should apply proper border-radius style 7`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #dcf1da;
  background-color: #f6fbf6;
  border-radius: 3px;
}

<info
  className="c0"
  type="success"
>
  Message
</info>
`;

exports[`Message when in classic mode when roundedCorners prop is not passed should apply proper border-radius style 8`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #ffe4cc;
  background-color: #fff8f2;
  border-radius: 3px;
}

<info
  className="c0"
  type="warning"
>
  Message
</info>
`;

exports[`Message when in classic mode when roundedCorners prop is set to false should apply no border-radius style 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #335c6d;
  background-color: #335c6d;
  border-radius: 0px;
}

<info
  className="c0"
  type="default"
>
  Message
</info>
`;

exports[`Message when in classic mode when roundedCorners prop is set to false should apply no border-radius style 2`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #f7d9d9;
  background-color: #fdf5f5;
  border-radius: 0px;
}

<info
  className="c0"
  type="error"
>
  Message
</info>
`;

exports[`Message when in classic mode when roundedCorners prop is set to false should apply no border-radius style 3`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #fec;
  background-color: #fffbf2;
  border-radius: 0px;
}

<info
  className="c0"
  type="help"
>
  Message
</info>
`;

exports[`Message when in classic mode when roundedCorners prop is set to false should apply no border-radius style 4`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #d0e3fa;
  background-color: #f3f8fe;
  border-radius: 0px;
}

<info
  className="c0"
  type="info"
>
  Message
</info>
`;

exports[`Message when in classic mode when roundedCorners prop is set to false should apply no border-radius style 5`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #ffe4cc;
  background-color: #fff8f2;
  border-radius: 0px;
}

<info
  className="c0"
  type="maintenance"
>
  Message
</info>
`;

exports[`Message when in classic mode when roundedCorners prop is set to false should apply no border-radius style 6`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #e0d6eb;
  background-color: #f7f5fa;
  border-radius: 0px;
}

<info
  className="c0"
  type="new"
>
  Message
</info>
`;

exports[`Message when in classic mode when roundedCorners prop is set to false should apply no border-radius style 7`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #dcf1da;
  background-color: #f6fbf6;
  border-radius: 0px;
}

<info
  className="c0"
  type="success"
>
  Message
</info>
`;

exports[`Message when in classic mode when roundedCorners prop is set to false should apply no border-radius style 8`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #ffe4cc;
  background-color: #fff8f2;
  border-radius: 0px;
}

<info
  className="c0"
  type="warning"
>
  Message
</info>
`;

exports[`Message when in classic mode when transparent prop is set to true should render the message without the border and background color in white 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #FFFFFF;
  border-radius: 3px;
}

<info
  className="c0"
  type="default"
>
  Message
</info>
`;

exports[`Message when in classic mode when transparent prop is set to true should render the message without the border and background color in white 2`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #FFFFFF;
  border-radius: 3px;
}

<info
  className="c0"
  type="error"
>
  Message
</info>
`;

exports[`Message when in classic mode when transparent prop is set to true should render the message without the border and background color in white 3`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #FFFFFF;
  border-radius: 3px;
}

<info
  className="c0"
  type="help"
>
  Message
</info>
`;

exports[`Message when in classic mode when transparent prop is set to true should render the message without the border and background color in white 4`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #FFFFFF;
  border-radius: 3px;
}

<info
  className="c0"
  type="info"
>
  Message
</info>
`;

exports[`Message when in classic mode when transparent prop is set to true should render the message without the border and background color in white 5`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #FFFFFF;
  border-radius: 3px;
}

<info
  className="c0"
  type="maintenance"
>
  Message
</info>
`;

exports[`Message when in classic mode when transparent prop is set to true should render the message without the border and background color in white 6`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #FFFFFF;
  border-radius: 3px;
}

<info
  className="c0"
  type="new"
>
  Message
</info>
`;

exports[`Message when in classic mode when transparent prop is set to true should render the message without the border and background color in white 7`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #FFFFFF;
  border-radius: 3px;
}

<info
  className="c0"
  type="success"
>
  Message
</info>
`;

exports[`Message when in classic mode when transparent prop is set to true should render the message without the border and background color in white 8`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #FFFFFF;
  border-radius: 3px;
}

<info
  className="c0"
  type="warning"
>
  Message
</info>
`;

exports[`Message when rendered should match the snapshot 1`] = `
<styled.div
  as="info"
  border={true}
  role="status"
  roundedCorners={true}
  theme={
    Object {
      "colors": Object {
        "border": "#668491",
        "brand": "#00DC00",
        "error": "#C7384F",
        "focus": "#FFB500",
        "info": "#0073C2",
        "primary": "#26A826",
        "secondary": "#006300",
        "success": "#00B000",
        "tertiary": "#004400",
        "warning": "#E96400",
        "white": "#FFFFFF",
      },
      "disabled": Object {
        "border": "#CCD6DA",
        "disabled": "rgba(0,0,0,0.55)",
        "input": "#F2F4F5",
      },
      "name": "base",
      "text": Object {
        "color": "rgba(0,0,0,0.9)",
        "placeholder": "rgba(0,0,0,0.3)",
        "size": "14px",
      },
    }
  }
  transparent={false}
  type="info"
>
  <TypeIcon
    as="info"
    roundedCorners={true}
    transparent={false}
  />
  <MessageContent
    as="info"
    transparent={false}
  >
    Message
  </MessageContent>
</styled.div>
`;

exports[`Message when transparent prop is not passed should render the message with border in a proper color and a white background 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #C7384F;
  background-color: #FFFFFF;
}

<info
  className="c0"
  type="error"
>
  Message
</info>
`;

exports[`Message when transparent prop is not passed should render the message with border in a proper color and a white background 2`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #0073C2;
  background-color: #FFFFFF;
}

<info
  className="c0"
  type="info"
>
  Message
</info>
`;

exports[`Message when transparent prop is not passed should render the message with border in a proper color and a white background 3`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #00B000;
  background-color: #FFFFFF;
}

<info
  className="c0"
  type="success"
>
  Message
</info>
`;

exports[`Message when transparent prop is not passed should render the message with border in a proper color and a white background 4`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: 1px solid #E96400;
  background-color: #FFFFFF;
}

<info
  className="c0"
  type="warning"
>
  Message
</info>
`;

exports[`Message when transparent prop is set to true should render the message without the border 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #FFFFFF;
}

<info
  className="c0"
  type="error"
>
  Message
</info>
`;

exports[`Message when transparent prop is set to true should render the message without the border 2`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #FFFFFF;
}

<info
  className="c0"
  type="info"
>
  Message
</info>
`;

exports[`Message when transparent prop is set to true should render the message without the border 3`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #FFFFFF;
}

<info
  className="c0"
  type="success"
>
  Message
</info>
`;

exports[`Message when transparent prop is set to true should render the message without the border 4`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  border: none;
  background-color: #FFFFFF;
}

<info
  className="c0"
  type="warning"
>
  Message
</info>
`;
